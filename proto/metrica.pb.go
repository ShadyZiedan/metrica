// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: proto/metrica.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Metric_MType int32

const (
	Metric_COUNTER Metric_MType = 0
	Metric_GAUGE   Metric_MType = 1
)

// Enum value maps for Metric_MType.
var (
	Metric_MType_name = map[int32]string{
		0: "COUNTER",
		1: "GAUGE",
	}
	Metric_MType_value = map[string]int32{
		"COUNTER": 0,
		"GAUGE":   1,
	}
)

func (x Metric_MType) Enum() *Metric_MType {
	p := new(Metric_MType)
	*p = x
	return p
}

func (x Metric_MType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Metric_MType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_metrica_proto_enumTypes[0].Descriptor()
}

func (Metric_MType) Type() protoreflect.EnumType {
	return &file_proto_metrica_proto_enumTypes[0]
}

func (x Metric_MType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Metric_MType.Descriptor instead.
func (Metric_MType) EnumDescriptor() ([]byte, []int) {
	return file_proto_metrica_proto_rawDescGZIP(), []int{0, 0}
}

type Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MType Metric_MType `protobuf:"varint,2,opt,name=m_type,json=mType,proto3,enum=metrica.Metric_MType" json:"m_type,omitempty"`
	Delta *int64       `protobuf:"varint,3,opt,name=delta,proto3,oneof" json:"delta,omitempty"`
	Value *float64     `protobuf:"fixed64,4,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *Metric) Reset() {
	*x = Metric{}
	mi := &file_proto_metrica_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrica_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_proto_metrica_proto_rawDescGZIP(), []int{0}
}

func (x *Metric) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Metric) GetMType() Metric_MType {
	if x != nil {
		return x.MType
	}
	return Metric_COUNTER
}

func (x *Metric) GetDelta() int64 {
	if x != nil && x.Delta != nil {
		return *x.Delta
	}
	return 0
}

func (x *Metric) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type UpdateBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*Metric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *UpdateBatchRequest) Reset() {
	*x = UpdateBatchRequest{}
	mi := &file_proto_metrica_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBatchRequest) ProtoMessage() {}

func (x *UpdateBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrica_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBatchRequest.ProtoReflect.Descriptor instead.
func (*UpdateBatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_metrica_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateBatchRequest) GetMetrics() []*Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type UpdateBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*Metric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *UpdateBatchResponse) Reset() {
	*x = UpdateBatchResponse{}
	mi := &file_proto_metrica_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBatchResponse) ProtoMessage() {}

func (x *UpdateBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrica_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBatchResponse.ProtoReflect.Descriptor instead.
func (*UpdateBatchResponse) Descriptor() ([]byte, []int) {
	return file_proto_metrica_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateBatchResponse) GetMetrics() []*Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

var File_proto_metrica_proto protoreflect.FileDescriptor

var file_proto_metrica_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x22, 0xb1,
	0x01, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x4d, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x05, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x22, 0x1f, 0x0a,
	0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45,
	0x52, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x41, 0x55, 0x47, 0x45, 0x10, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x22, 0x40, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x32, 0x61, 0x0a, 0x0e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1b, 0x2e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x61, 0x64, 0x79, 0x7a, 0x69, 0x65, 0x64,
	0x61, 0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_metrica_proto_rawDescOnce sync.Once
	file_proto_metrica_proto_rawDescData = file_proto_metrica_proto_rawDesc
)

func file_proto_metrica_proto_rawDescGZIP() []byte {
	file_proto_metrica_proto_rawDescOnce.Do(func() {
		file_proto_metrica_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_metrica_proto_rawDescData)
	})
	return file_proto_metrica_proto_rawDescData
}

var file_proto_metrica_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_metrica_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_metrica_proto_goTypes = []any{
	(Metric_MType)(0),           // 0: metrica.Metric.MType
	(*Metric)(nil),              // 1: metrica.Metric
	(*UpdateBatchRequest)(nil),  // 2: metrica.UpdateBatchRequest
	(*UpdateBatchResponse)(nil), // 3: metrica.UpdateBatchResponse
}
var file_proto_metrica_proto_depIdxs = []int32{
	0, // 0: metrica.Metric.m_type:type_name -> metrica.Metric.MType
	1, // 1: metrica.UpdateBatchRequest.metrics:type_name -> metrica.Metric
	1, // 2: metrica.UpdateBatchResponse.metrics:type_name -> metrica.Metric
	2, // 3: metrica.MetricsService.UpdateBatchMetrics:input_type -> metrica.UpdateBatchRequest
	3, // 4: metrica.MetricsService.UpdateBatchMetrics:output_type -> metrica.UpdateBatchResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_metrica_proto_init() }
func file_proto_metrica_proto_init() {
	if File_proto_metrica_proto != nil {
		return
	}
	file_proto_metrica_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_metrica_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_metrica_proto_goTypes,
		DependencyIndexes: file_proto_metrica_proto_depIdxs,
		EnumInfos:         file_proto_metrica_proto_enumTypes,
		MessageInfos:      file_proto_metrica_proto_msgTypes,
	}.Build()
	File_proto_metrica_proto = out.File
	file_proto_metrica_proto_rawDesc = nil
	file_proto_metrica_proto_goTypes = nil
	file_proto_metrica_proto_depIdxs = nil
}
